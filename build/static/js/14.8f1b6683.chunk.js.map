{"version":3,"sources":["constant.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js","views/widgets/WidgetsDropdown.js"],"names":["baseUrl","img_url","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","labels","defaultProps","ChartBarSimple","barPercentage","categoryPercentage","WidgetsDropdown","headers","localStorage","getItem","useEffect","getdata","useState","totalSubscription","setTotalSubscription","id","a","axios","get","CONSTANT","res","console","warn","code","toast","sm","lg","header","text","footerSlot","className","style","height"],"mappings":"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","file":"static/js/14.8f1b6683.chunk.js","sourcesContent":["export const baseUrl  = \"http://3.12.65.48:4001\"\r\n// export const baseUrl  = \"http://localhost:4001\"\r\n// export const img_url = \"http://localhost:4001/\"\r\nexport const img_url = \"http://3.12.65.48:4001/\"\r\nexport const CONSTANT_NUMBER_2 = 'hello I am also a constant';\r\nexport const sample_file = 'http://3.12.65.48:4001/src/assets/samplesheet.xlsx'","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport axios from \"axios\";\r\nimport *as  CONSTANT from '../../constant'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst WidgetsDropdown = () => {\r\n  // const [total, setTotal] = useState([]);\r\n  // const [totalCount, setTotalCount] = useState({\r\n  //   allTotal :0\r\n  // });\r\n  const options = {\r\n    headers: {'token': localStorage.getItem('token')}\r\n  };\r\n  // const color =[\"gradient-primary\",\"gradient-info\", \"gradient-primary\"]\r\n  useEffect(() => {\r\n    getdata()\r\n  }, []);\r\n   const [totalSubscription, setTotalSubscription] = useState([]);\r\n// let totalSubscription = \"50\"\r\n  const getdata = async (id) => {\r\n    const res = await axios.get(`${CONSTANT.baseUrl}/api/admin/get-total-subscription`, options);\r\n    console.warn(\"response\", res.data)\r\n    if (res.data.code != 200) {\r\n      toast(\"Somethig went wrong\");\r\n    } else {\r\n      toast(\"Get successfully\");\r\n      setTotalSubscription(res.data.data)\r\n      // totalSubscription =  res.data.data\r\n    }\r\n  }\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      <CRow>\r\n        {/* {\r\n          total.map((item, i) => <CCol sm=\"6\" lg=\"3\">\r\n            <CWidgetDropdown \r\n              color={color[i]}\r\n              header={item.COUNT}\r\n              text={item._id.block_user== 1 ? \"Block Users\": item._id.minner_Activity == true? \"Online Users\" : \"Ofline Users\" }\r\n              footerSlot={\r\n                <ChartLineSimple\r\n                  pointed\r\n                  className=\"c-chart-wrapper mt-3 mx-3\"\r\n                  style={{ height: '70px' }}\r\n                  dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n                  pointHoverBackgroundColor=\"primary\"\r\n                  label=\"Members\"\r\n                  labels=\"months\"\r\n                />\r\n                \r\n              }\r\n              \r\n            >\r\n            </CWidgetDropdown>\r\n          </CCol>\r\n          )\r\n        } */}\r\n         <CCol sm=\"6\" lg=\"3\">\r\n            <CWidgetDropdown\r\n              color=\"gradient-primary\"\r\n              header=\"50000\"\r\n              text={\"Total Users\" }\r\n              footerSlot={\r\n                <ChartLineSimple\r\n                  pointed\r\n                  className=\"c-chart-wrapper mt-3 mx-3\"\r\n                  style={{ height: '70px' }}\r\n                  dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n                  pointHoverBackgroundColor=\"primary\"\r\n                  label=\"Members\"\r\n                  labels=\"months\"\r\n                />\r\n              }\r\n            >\r\n            </CWidgetDropdown>\r\n          </CCol>\r\n          <CCol sm=\"6\" lg=\"3\">\r\n            <CWidgetDropdown\r\n              color=\"gradient-info\"\r\n              header={totalSubscription+\"\"}\r\n              text={\"Total Subscription\" }\r\n              footerSlot={\r\n                <ChartLineSimple\r\n                  pointed\r\n                  className=\"c-chart-wrapper mt-3 mx-3\"\r\n                  style={{ height: '70px' }}\r\n                  dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n                  pointHoverBackgroundColor=\"primary\"\r\n                  label=\"Members\"\r\n                  labels=\"months\"\r\n                />\r\n              }\r\n            >\r\n            </CWidgetDropdown>\r\n          </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsDropdown\r\n"],"sourceRoot":""}